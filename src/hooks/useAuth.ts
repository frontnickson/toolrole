import { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import type { ExtendedUser, LoginCredentials, RegisterCredentials, AuthResponse } from '../types/user';
import { apiService } from '../services/api';
import { 
  clearCurrentUser, 
  setCurrentUser, 
  updateUserProfile,
  setTempUserData, 
  clearTempUserData,
  setLoading,
  setError,
  clearError
} from '../store/slices/userSlice';
import { replaceAllBoards, setCurrentBoard } from '../store/slices/boardSlice';
import { boardsApi } from '../services/api/boards';
import type { RootState } from '../store';

/**
 * –•—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * 
 * –≠—Ç–æ—Ç —Ö—É–∫ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–ª—è:
 * - –í—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
 * - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * - –í—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
 * - –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è email/username
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * 
 * –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã:
 * 1. –ü—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–æ–∫–µ–Ω –≤ Redux store
 * 2. –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ Redux store - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–æ–∫–µ–Ω –≤ API —Å–µ—Ä–≤–∏—Å
 * 3. –ü—Ä–∏ –≤—Ö–æ–¥–µ/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç ExtendedUser –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ Redux store
 * 4. –ü—Ä–∏ –≤—ã—Ö–æ–¥–µ –æ—á–∏—â–∞–µ—Ç —Ç–æ–∫–µ–Ω –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Redux store (–¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ redux-persist)
 */
export const useAuth = () => {
  const dispatch = useDispatch();
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Redux store
  const { currentUser, isLoading, error } = useSelector((state: RootState) => state.user);
  
  // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Ö—É–∫–∞
  const [localLoading, setLocalLoading] = useState(true);

  /**
   * –≠—Ñ—Ñ–µ–∫—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ö—É–∫–∞
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ currentUser
   */
  
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Redux store
    // Redux-persist –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ
    if (currentUser) {
      console.log('üîç useAuth: currentUser –Ω–∞–π–¥–µ–Ω:', currentUser.username);
      console.log('üîç useAuth: accessToken:', currentUser.accessToken ? '–µ—Å—Ç—å' : '–ù–ï–¢');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤ API —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      // –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Redux store –≤–º–µ—Å—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (currentUser.accessToken) {
        apiService.setAuthToken(currentUser.accessToken);
        console.log('üîç useAuth: —Ç–æ–∫–µ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ API service');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å–∫–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω
        loadUserBoardsAfterAuth();
      } else {
        console.log('üîç useAuth: —Ç–æ–∫–µ–Ω –ù–ï –Ω–∞–π–¥–µ–Ω –≤ currentUser');
      }
    } else {
      console.log('üîç useAuth: currentUser –ù–ï –Ω–∞–π–¥–µ–Ω');
    }
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
    setLocalLoading(false);
  }, [currentUser]);

  /**
   * –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
   */
  const loadUserBoardsAfterAuth = async () => {
    try {
      console.log('üìã useAuth: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å–∫–∏ –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...');
      const response = await boardsApi.getUserBoards();
      
      if (response.success && response.data) {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å–∫–∏ –±–µ–∑ –∑–∞–¥–∞—á –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        const boardsWithoutTasks = response.data.map(board => {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
          const hasOverdueColumn = board.columns.some(col => 
            col.title.toLowerCase().includes('–ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ') || 
            col.title.toLowerCase().includes('overdue')
          );
          
          // –ï—Å–ª–∏ –Ω–µ—Ç –∫–æ–ª–æ–Ω–∫–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë
          let columns = board.columns.map(column => ({
            ...column,
            tasks: [] // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º
          }));
          
          if (!hasOverdueColumn) {
            const overdueColumn = {
              id: `col-${board.id}-overdue`,
              boardId: board.id,
              title: '–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ',
              description: '–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏',
              icon: '‚ö†Ô∏è',
              color: '#DC2626',
              order: columns.length,
              isLocked: false,
              isCollapsed: false,
              isStandard: true,
              tasks: [],
              settings: {
                allowTaskCreation: false,
                allowTaskEditing: true,
                allowTaskMoving: true,
                allowTaskDeletion: true,
                allowSubtaskCreation: false,
                allowCommentCreation: true,
                allowAttachmentUpload: true,
                autoSortTasks: false,
                sortBy: 'dueDate',
                sortDirection: 'asc'
              },
              statistics: {
                totalTasks: 0,
                completedTasks: 0,
                inProgressTasks: 0,
                overdueTasks: 0,
                averageTaskDuration: 0,
                totalComments: 0,
                totalAttachments: 0,
                lastTaskUpdate: Date.now()
              },
              createdAt: Date.now(),
              updatedAt: Date.now()
            };
            columns.push(overdueColumn);
          }
          
          return {
            ...board,
            columns
          };
        });
        
        dispatch(replaceAllBoards(boardsWithoutTasks));
        console.log('üìã useAuth: –î–æ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', boardsWithoutTasks.length);
        return true;
      } else {
        console.log('üìã useAuth: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å–æ–∫ –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', response.message);
        return false;
      }
    } catch (error) {
      console.error('üìã useAuth: –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ—Å–æ–∫ –ø–æ—Å–ª–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
      return false;
    }
  };

  /**
   * –§—É–Ω–∫—Ü–∏—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
   * 
   * @param credentials - —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ (email, password)
   * @returns –æ–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ { success: boolean, error?: string }
   */
  const login = async (credentials: LoginCredentials): Promise<{ success: boolean; error?: string }> => {
    
    try {
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
      dispatch(setLoading(true));
      dispatch(clearError());
      
      // –û—á–∏—â–∞–µ–º –¥–æ—Å–∫–∏ –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
      dispatch(replaceAllBoards([]));
      dispatch(setCurrentBoard(null));
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ—Å–æ–∫ –∏–∑ localStorage
      localStorage.removeItem('selectedBoardId');
      localStorage.removeItem('viewMode');
      localStorage.removeItem('activeNavItem');
      localStorage.removeItem('todoViewMode');
      localStorage.removeItem('todoActiveNavItem');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      console.log('üîê useAuth: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:', credentials);
      const response = await apiService.post<AuthResponse>('/auth/login-email', credentials);
      
      if (response.success && response.data) {
        const { access_token } = response.data;
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –≤ API —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        apiService.setAuthToken(access_token);
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞
        const userResponse = await apiService.get<ExtendedUser>('/auth/me');
        
        if (userResponse.success && userResponse.data) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö - userResponse.data –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          if (userResponse.data.id) {
            const userData: ExtendedUser = {
              ...userResponse.data,
              accessToken: access_token, // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            };
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Redux store
            dispatch(setCurrentUser(userData));
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
            await loadUserBoardsAfterAuth();
            
            return { success: true };
          } else {
            console.error('üîê useAuth: –í –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç ID, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback');
          }
        } else {
          console.error('üîê useAuth: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userResponse);
        }
        
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ID –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        const userData: ExtendedUser = {
          id: 1, // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π ID –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          email: credentials.email,
          username: credentials.email.split('@')[0],
          accessToken: access_token,
          firstName: credentials.email.split('@')[0],
          lastName: '',
          theme: 'light',
          language: 'ru',
          isActive: true,
          isVerified: false,
          isSuperuser: false,
          isOnline: true,
          createdAt: new Date().toISOString(),
          lastLogin: new Date().toISOString(),
          friends: [],
          friendRequests: [],
          teams: [],
          notifications: [],
          unreadNotificationsCount: 0,
          emailNotifications: true,
          pushNotifications: true,
          desktopNotifications: true,
          profileVisibility: 'public',
          showOnlineStatus: true,
          allowFriendRequests: true,
        };
        
        console.error('üîê useAuth: –°–æ–∑–¥–∞–Ω fallback –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userData);
        dispatch(setCurrentUser(userData));
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        await loadUserBoardsAfterAuth();
        
        return { success: true };
      }
      
      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É
      console.error('üîê useAuth: –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', response.message);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫ –≤—Ö–æ–¥–∞
      let errorMessage = '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞';
      
      if (response.error) {
        // –ï—Å–ª–∏ error - —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë –Ω–∞–ø—Ä—è–º—É—é
        if (typeof response.error === 'string') {
          errorMessage = response.error;
        } else {
          // –ï—Å–ª–∏ error - —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞
          const errorObj = response.error as any;
          if (errorObj.type === 'INVALID_CREDENTIALS') {
            errorMessage = '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å';
          } else if (errorObj.type === 'USER_NOT_FOUND') {
            errorMessage = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
          } else if (errorObj.type === 'ACCOUNT_DISABLED') {
            errorMessage = '–ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω';
          } else {
            errorMessage = errorObj.message || response.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞';
          }
        }
      } else {
        errorMessage = response.message || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞';
      }
      
      dispatch(setError(errorMessage));
      return { success: false, error: errorMessage };
      
    } catch (error) {
      // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
      const errorMessage = error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏';
      console.error('üîê useAuth: –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', errorMessage);
      
      dispatch(setError(errorMessage));
      return { success: false, error: errorMessage };
      
    } finally {
      // –°–Ω–∏–º–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
      dispatch(setLoading(false));
    }
  };

  /**
   * –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * 
   * @param credentials - –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (email, username, password, full_name?)
   * @returns –æ–±—ä–µ–∫—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ { success: boolean, error?: string }
   */
  const register = async (credentials: RegisterCredentials): Promise<{ success: boolean; error?: string }> => {
    
    try {
      console.log('üîê useAuth: –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('üîê useAuth: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', credentials);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
      dispatch(setLoading(true));
      dispatch(clearError());
      
      // –û—á–∏—â–∞–µ–º –¥–æ—Å–∫–∏ –ø–µ—Ä–µ–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
      dispatch(replaceAllBoards([]));
      dispatch(setCurrentBoard(null));
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ—Å–æ–∫ –∏–∑ localStorage
      localStorage.removeItem('selectedBoardId');
      localStorage.removeItem('viewMode');
      localStorage.removeItem('activeNavItem');
      localStorage.removeItem('todoViewMode');
      localStorage.removeItem('todoActiveNavItem');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      console.log('üîê useAuth: –í—ã–∑—ã–≤–∞–µ–º apiService.post –Ω–∞ /auth/register');
      const response = await apiService.post<ExtendedUser>('/auth/register', credentials);
      
      console.log('üîê useAuth: –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response);
      
      if (response.success && response.data) {
        console.log('üîê useAuth: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—Ö–æ–¥');
        
        // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Ö–æ–¥–∏–º –≤ —Å–∏—Å—Ç–µ–º—É
        const loginResult = await login({ 
          email: credentials.email, 
          password: credentials.password 
        });
        
        return loginResult;
      }
      
      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É
      console.error('üîê useAuth: –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', response.message);
      console.error('üîê useAuth: –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—à–∏–±–∫–∏:', response.error);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
      let errorMessage = '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';
      
      if (response.error) {
        // –ï—Å–ª–∏ error - —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë –Ω–∞–ø—Ä—è–º—É—é
        if (typeof response.error === 'string') {
          errorMessage = response.error;
        } else {
          // –ï—Å–ª–∏ error - —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞
          const errorObj = response.error as any;
          if (errorObj.type === 'USER_EXISTS') {
            errorMessage = errorObj.message || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';
          } else if (errorObj.type === 'VALIDATION_ERROR') {
            errorMessage = '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö';
            if (errorObj.details && errorObj.details.length > 0) {
              errorMessage += ': ' + errorObj.details.map((d: any) => d.message).join(', ');
            }
          } else {
            errorMessage = errorObj.message || response.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';
          }
        }
      } else {
        errorMessage = response.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏';
      }
      
      dispatch(setError(errorMessage));
      return { success: false, error: errorMessage };
      
    } catch (error) {
      // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
      const errorMessage = error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏';
      console.error('üîê useAuth: –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', errorMessage);
      console.error('üîê useAuth: Stack trace:', error instanceof Error ? error.stack : 'No stack trace');
      
      dispatch(setError(errorMessage));
      return { success: false, error: errorMessage };
      
    } finally {
      // –°–Ω–∏–º–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
      dispatch(setLoading(false));
    }
  };

  /**
   * –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è email –≤ —Å–∏—Å—Ç–µ–º–µ
   * 
   * @param email - email –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns true –µ—Å–ª–∏ email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, false –µ—Å–ª–∏ —Å–≤–æ–±–æ–¥–µ–Ω
   */
  const checkEmailExists = async (email: string): Promise<boolean> => {
    try {
      console.log('üîê useAuth: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è email:', email);
      
      const response = await apiService.post<{ exists: boolean }>('/auth/check-email', { email });
      const exists = response.success && response.data ? Boolean(response.data.exists) : false;
      
      console.log('üîê useAuth: Email —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', exists);
      return exists;
      
    } catch (error) {
      console.error('üîê useAuth: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ email:', error);
      return false; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º email —Å–≤–æ–±–æ–¥–Ω—ã–º
    }
  };

  /**
   * –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è username –≤ —Å–∏—Å—Ç–µ–º–µ
   * 
   * @param username - username –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns true –µ—Å–ª–∏ username —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, false –µ—Å–ª–∏ —Å–≤–æ–±–æ–¥–µ–Ω
   */
  const checkUsernameExists = async (username: string): Promise<boolean> => {
    try {
      console.log('üîê useAuth: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è username:', username);
      
      const response = await apiService.post<{ exists: boolean }>('/auth/check-username', { username });
      const exists = response.success && response.data ? Boolean(response.data.exists) : false;
      
      console.log('üîê useAuth: Username —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', exists);
      return exists;
      
    } catch (error) {
      console.error('üîê useAuth: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ username:', error);
      return false; // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–µ–º username —Å–≤–æ–±–æ–¥–Ω—ã–º
    }
  };

  /**
   * –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
   * –û—á–∏—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ—Å–∫–∏ –∏–∑ Redux store
   * Redux-persist –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—Å—Ç–∏—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
   */
  const logout = () => {
    try {
      // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω –≤ API —Å–µ—Ä–≤–∏—Å–µ
      apiService.clearAuthToken();
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Redux store
      dispatch(clearCurrentUser());
      
      // –û—á–∏—â–∞–µ–º –¥–æ—Å–∫–∏ –∏–∑ Redux store
      dispatch(replaceAllBoards([]));
      dispatch(setCurrentBoard(null));
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–æ—Å–æ–∫ –∏–∑ localStorage
      localStorage.removeItem('selectedBoardId');
      localStorage.removeItem('viewMode');
      localStorage.removeItem('activeNavItem');
      localStorage.removeItem('todoViewMode');
      localStorage.removeItem('todoActiveNavItem');
      
      console.log('üîê useAuth: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã, –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã');
      
    } catch (error) {
      console.error('üîê useAuth: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã:', error);
    }
  };

  /**
   * –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–æ—Ä–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
   * 
   * @param data - –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  const setTempData = (data: Partial<ExtendedUser>) => {
    dispatch(setTempUserData(data));
  };

  /**
   * –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   */
  const clearTempData = () => {
    dispatch(clearTempUserData());
  };

  /**
   * –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Redux store
   * 
   * @param data - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
   */
  const updateUserProfileInStore = (data: Partial<ExtendedUser>) => {
    dispatch(updateUserProfile(data));
  };

  // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const isAuthenticated = !!currentUser;

  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('üîê useAuth: –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', !!currentUser, '–∑–∞–≥—Ä—É–∑–∫–∞:', isLoading || localLoading);

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∏ –¥–∞–Ω–Ω—ã–º–∏
  return {
    // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user: currentUser,
    currentUser,
    
    // –°–æ—Å—Ç–æ—è–Ω–∏—è
    isLoading: isLoading || localLoading,
    isAuthenticated,
    error,
    
    // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    login,
    register,
    logout,
    
    // –§—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
    checkEmailExists,
    checkUsernameExists,
    
    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    setTempData,
    clearTempData,
    
    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
    updateUserProfile: updateUserProfileInStore,
  };
};
