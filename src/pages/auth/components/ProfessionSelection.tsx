import React, { useState } from 'react';
import styles from './AuthForms.module.scss';

interface ProfessionSelectionProps {
  onNext: (profession: string) => void;
  onBack: () => void;
}

// –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –≤ IT –∏ –¥–∏–∑–∞–π–Ω–µ
const PROFESSIONS = [
  {
    id: 'frontend-developer',
    name: 'Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
    icon: 'üíª',
    description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤'
  },
  {
    id: 'backend-developer',
    name: 'Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
    icon: '‚öôÔ∏è',
    description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π'
  },
  {
    id: 'fullstack-developer',
    name: 'Fullstack —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
    icon: 'üîÑ',
    description: '–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π'
  },
  {
    id: 'mobile-developer',
    name: 'Mobile —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
    icon: 'üì±',
    description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π'
  },
  {
    id: 'ui-designer',
    name: 'UI –¥–∏–∑–∞–π–Ω–µ—Ä',
    icon: 'üé®',
    description: '–î–∏–∑–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤'
  },
  {
    id: 'ux-designer',
    name: 'UX –¥–∏–∑–∞–π–Ω–µ—Ä',
    icon: 'üß†',
    description: '–î–∏–∑–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞'
  },
  {
    id: 'graphic-designer',
    name: '–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä',
    icon: 'üñºÔ∏è',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
  },
  {
    id: 'product-designer',
    name: 'Product –¥–∏–∑–∞–π–Ω–µ—Ä',
    icon: 'üì¶',
    description: '–î–∏–∑–∞–π–Ω –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è'
  },
  {
    id: 'qa-engineer',
    name: 'QA –∏–Ω–∂–µ–Ω–µ—Ä',
    icon: 'üîç',
    description: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞'
  },
  {
    id: 'devops-engineer',
    name: 'DevOps –∏–Ω–∂–µ–Ω–µ—Ä',
    icon: '‚òÅÔ∏è',
    description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞'
  },
  {
    id: 'data-scientist',
    name: 'Data Scientist',
    icon: 'üìä',
    description: '–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ'
  },
  {
    id: 'product-manager',
    name: 'Product Manager',
    icon: 'üìà',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–º'
  },
  {
    id: 'project-manager',
    name: 'Project Manager',
    icon: 'üìã',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏'
  },
  {
    id: 'marketing-manager',
    name: 'Marketing Manager',
    icon: 'üì¢',
    description: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ'
  },
  {
    id: 'content-manager',
    name: 'Content Manager',
    icon: '‚úçÔ∏è',
    description: '–°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º'
  },
  {
    id: 'system-administrator',
    name: '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    icon: 'üñ•Ô∏è',
    description: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ IT-—Å–∏—Å—Ç–µ–º'
  },
  {
    id: 'cybersecurity-specialist',
    name: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
    icon: 'üîí',
    description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'
  },
  {
    id: 'business-analyst',
    name: '–ë–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫',
    icon: 'üìä',
    description: '–ê–Ω–∞–ª–∏–∑ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤'
  },
  {
    id: 'sales-manager',
    name: 'Sales Manager',
    icon: 'üí∞',
    description: '–ü—Ä–æ–¥–∞–∂–∏ –∏ —Ä–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏'
  },
  {
    id: 'hr-specialist',
    name: 'HR —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç',
    icon: 'üë•',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º'
  },
  {
    id: 'other',
    name: '–î—Ä—É–≥–æ–µ',
    icon: 'üîß',
    description: '–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é'
  }
];

const ProfessionSelection: React.FC<ProfessionSelectionProps> = ({ onNext, onBack }) => {
  const [selectedProfession, setSelectedProfession] = useState<string>('');
  const [customProfession, setCustomProfession] = useState<string>('');
  const [searchTerm, setSearchTerm] = useState<string>('');

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
  const filteredProfessions = PROFESSIONS.filter(profession =>
    profession.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    profession.description.toLowerCase().includes(searchTerm.toLowerCase())
  );

  const handleProfessionSelect = (professionId: string) => {
    setSelectedProfession(professionId);
    if (professionId !== 'other') {
      setCustomProfession('');
    }
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (selectedProfession === 'other' && !customProfession.trim()) {
      return;
    }
    
    const profession = selectedProfession === 'other' ? customProfession.trim() : selectedProfession;
    onNext(profession);
  };

  const selectedProfessionData = PROFESSIONS.find(p => p.id === selectedProfession);

  return (
    <div className={styles.professionFormContainer}>
      <div className={styles.stepHeader}>
        <h2>–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é</h2>
        <p className={styles.subtitle}>–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏</p>
      </div>

      <form onSubmit={handleSubmit} className={styles.form}>
        {/* –ü–æ–∏—Å–∫ */}
        <div className={styles.searchContainer}>
          <div className={styles.searchInput}>
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M19 19L13 13M15 8C15 11.866 11.866 15 8 15C4.13401 15 1 11.866 1 8C1 4.13401 4.13401 1 8 1C11.866 1 15 4.13401 15 8Z" stroke="#9CA3AF" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className={styles.searchField}
            />
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π */}
        <div className={styles.professionsGrid}>
          {filteredProfessions.map((profession) => (
            <div
              key={profession.id}
              className={`${styles.professionCard} ${
                selectedProfession === profession.id ? styles.professionCardSelected : ''
              }`}
              onClick={() => handleProfessionSelect(profession.id)}
            >
              <div className={styles.professionIcon}>{profession.icon}</div>
              <div className={styles.professionContent}>
                <h3 className={styles.professionName}>{profession.name}</h3>
                <p className={styles.professionDescription}>{profession.description}</p>
              </div>
            </div>
          ))}
        </div>

        {/* –ö–∞—Å—Ç–æ–º–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è */}
        {selectedProfession === 'other' && (
          <div className={styles.customProfessionContainer}>
            <label htmlFor="customProfession" className={styles.label}>
              –£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ—Ñ–µ—Å—Å–∏—é
            </label>
            <input
              type="text"
              id="customProfession"
              value={customProfession}
              onChange={(e) => setCustomProfession(e.target.value)}
              className={styles.input}
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏"
            />
          </div>
        )}

        {/* –í—ã–±—Ä–∞–Ω–Ω–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è */}
        {selectedProfessionData && selectedProfession !== 'other' && (
          <div className={styles.selectedProfession}>
            <div className={styles.selectedProfessionIcon}>{selectedProfessionData.icon}</div>
            <div className={styles.selectedProfessionContent}>
              <h4>‚úÖ –í—ã–±—Ä–∞–Ω–æ: {selectedProfessionData.name}</h4>
              <p>{selectedProfessionData.description}</p>
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className={styles.formActions}>
          <button
            type="button"
            onClick={onBack}
            className={styles.backButton}
          >
            –ù–∞–∑–∞–¥
          </button>
          
          <button
            type="submit"
            className={styles.nextButton}
            disabled={!selectedProfession || (selectedProfession === 'other' && !customProfession.trim())}
          >
            –ó–∞–≤–µ—Ä—à–∏—Ç—å
          </button>
        </div>
      </form>
    </div>
  );
};

export default ProfessionSelection;

