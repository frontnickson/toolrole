@import "../../../../styles/utils/mixins";
@import "../../../../styles/base/variables";

.todoItem {
  background: $white;
  border: 1px solid $gray-200;
  border-radius: $border-radius-lg;
  padding: 1rem;
  transition: all $transition-normal;
  
  &:hover {
    border-color: $gray-300;
    box-shadow: $shadow-md;
  }
  
  &.overdue {
    border-color: $error-color;
    background: rgba($error-color, 0.02);
  }
  
  &.editing {
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
  }
}

.itemHeader {
  margin-bottom: 0.75rem;
}

.titleRow {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 0.5rem;
  
  .title {
    font-size: 1rem;
    font-weight: 600;
    color: $gray-800;
    margin: 0;
    flex: 1;
    line-height: 1.4;
  }
  
  .actions {
    display: flex;
    gap: 0.5rem;
    margin-left: 0.5rem;
    
    button {
      background: none;
      border: none;
      cursor: pointer;
      padding: 0.25rem;
      border-radius: $border-radius-sm;
      transition: background-color $transition-normal;
      
      &:hover {
        background: $gray-100;
      }
    }
  }
}

.meta {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  align-items: center;
  font-size: 0.75rem;
  
  .priority {
    font-weight: 500;
    padding: 0.25rem 0.5rem;
    border-radius: $border-radius-sm;
    
    &.highPriority {
      background: rgba($error-color, 0.1);
      color: $error-color;
    }
    
    &.mediumPriority {
      background: rgba($warning-color, 0.1);
      color: $warning-color;
    }
    
    &.lowPriority {
      background: rgba($success-color, 0.1);
      color: $success-color;
    }
  }
  
  .dueDate {
    color: $gray-600;
    
    &.overdue {
      color: $error-color;
      font-weight: 500;
    }
    
    .overdueLabel {
      margin-left: 0.5rem;
      background: $error-color;
      color: $white;
      padding: 0.125rem 0.5rem;
      border-radius: $border-radius-sm;
      font-size: 0.625rem;
    }
  }
}

.description {
  color: $gray-600;
  font-size: 0.875rem;
  line-height: 1.5;
  margin: 0 0 0.75rem 0;
}

.tags {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-bottom: 0.75rem;
  
  .tag {
    background: $gray-100;
    color: $gray-600;
    padding: 0.25rem 0.5rem;
    border-radius: $border-radius-sm;
    font-size: 0.75rem;
    font-weight: 500;
  }
}

.itemFooter {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 0.75rem;
  border-top: 1px solid $gray-100;
  
  .createdAt {
    font-size: 0.75rem;
    color: $gray-500;
  }
  
  .statusToggle {
    background: none;
    border: 1px solid $gray-300;
    padding: 0.5rem 1rem;
    border-radius: $border-radius-md;
    font-size: 0.75rem;
    cursor: pointer;
    transition: all $transition-normal;
    
    &:hover {
      border-color: $gray-400;
      background: $gray-50;
    }
    
    &.completed {
      background: $success-color;
      border-color: $success-color;
      color: $white;
      
      &:hover {
        background: darken($success-color, 10%);
      }
    }
  }
}

// Стили для режима редактирования
.editForm {
  .editTitle {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }
  
  .editDescription {
    margin-bottom: 0.75rem;
  }
  
  .editControls {
    display: flex;
    gap: 0.75rem;
    margin-bottom: 1rem;
    
    select, input {
      flex: 1;
    }
  }
  
  .editActions {
    display: flex;
    gap: 0.75rem;
    
    button {
      flex: 1;
      padding: 0.75rem;
      border: none;
      border-radius: $border-radius-md;
      font-size: 0.875rem;
      font-weight: 500;
      cursor: pointer;
      transition: all $transition-normal;
    }
    
    .saveBtn {
      background: $success-color;
      color: $white;
      
      &:hover {
        background: darken($success-color, 10%);
      }
    }
    
    .cancelBtn {
      background: $gray-200;
      color: $gray-700;
      
      &:hover {
        background: $gray-300;
      }
    }
  }
}
