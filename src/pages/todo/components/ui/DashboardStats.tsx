import React from 'react';
import { useSelector } from 'react-redux';
import type { RootState } from '../../../../store';
import styles from './DashboardStats.module.scss';

interface DashboardStatsProps {
  onOpenProfile?: () => void;
}

const DashboardStats: React.FC<DashboardStatsProps> = ({ onOpenProfile }) => {
  const { boards } = useSelector((state: RootState) => state.boards);
  const { currentUser } = useSelector((state: RootState) => state.user);

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –∏–∑ –≤—Å–µ—Ö –¥–æ—Å–æ–∫
  const allTasks = boards.flatMap(board => 
    board.columns.flatMap(column => column.tasks)
  );

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–¥–∞—á–∞–º
  const totalTasks = allTasks.length;
  const completedTasks = allTasks.filter(task => task.status === 'completed').length;
  const inProgressTasks = allTasks.filter(task => task.status === 'in_progress').length;
  const pendingTasks = allTasks.filter(task => task.status === 'planning').length;
  const overdueTasks = allTasks.filter(task => {
          if (!task || !task.dueDate) return false;
      return new Date(task.dueDate) < new Date() && task.status !== 'completed';
  }).length;

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–æ—Å–∫–∞–º
  const totalBoards = boards.length;
  const activeBoards = boards.filter(board => !board.isArchived).length;
  const favoriteBoards = boards.filter(board => board.isFavorite).length;

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  const today = new Date();
  const lastWeek = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);
  const lastMonth = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);

  const tasksCompletedThisWeek = allTasks.filter(task => 
    task.status === 'completed' && 
    task.completedAt && 
    new Date(task.completedAt) >= lastWeek
  ).length;

  const tasksCompletedThisMonth = allTasks.filter(task => 
    task.status === 'completed' && 
    task.completedAt && 
    new Date(task.completedAt) >= lastMonth
  ).length;

  // –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const completionRate = totalTasks > 0 ? Math.round((completedTasks / totalTasks) * 100) : 0;

  // –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ (–≤ –¥–Ω—è—Ö)
  const averageCompletionTime = allTasks
    .filter(task => task.status === 'completed' && task.completedAt && task.createdAt)
    .map(task => {
      const created = new Date(task.createdAt);
      const completed = new Date(task.completedAt!);
      return Math.ceil((completed.getTime() - created.getTime()) / (1000 * 60 * 60 * 24));
    })
    .reduce((acc, time) => acc + time, 0);

  const avgCompletionDays = averageCompletionTime > 0 
    ? Math.round(averageCompletionTime / completedTasks) 
    : 0;

  return (
    <div className={styles.dashboardStats}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className={styles.header}>
        <h2 className={styles.title}>üìä –ì–ª–∞–≤–Ω–∞—è</h2>
        <p className={styles.subtitle}>–û–±–∑–æ—Ä –≤–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className={styles.mainStats}>
        <div className={styles.statCard}>
          <div className={styles.statIcon}>üìã</div>
          <div className={styles.statContent}>
            <div className={styles.statNumber}>{totalTasks}</div>
            <div className={styles.statLabel}>–í—Å–µ–≥–æ –∑–∞–¥–∞—á</div>
          </div>
        </div>

        <div className={styles.statCard}>
          <div className={styles.statIcon}>‚úÖ</div>
          <div className={styles.statContent}>
            <div className={styles.statNumber}>{completedTasks}</div>
            <div className={styles.statLabel}>–ó–∞–≤–µ—Ä—à–µ–Ω–æ</div>
          </div>
        </div>

        <div className={styles.statCard}>
          <div className={styles.statIcon}>üéØ</div>
          <div className={styles.statContent}>
            <div className={styles.statNumber}>{completionRate}%</div>
            <div className={styles.statLabel}>–í—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
          </div>
        </div>

        <div className={styles.statCard}>
          <div className={styles.statIcon}>‚è∞</div>
          <div className={styles.statContent}>
            <div className={styles.statNumber}>{overdueTasks}</div>
            <div className={styles.statLabel}>–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ</div>
          </div>
        </div>
      </div>

      {/* –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className={styles.detailedStats}>
        <div className={styles.statSection}>
          <h3 className={styles.sectionTitle}>üìÖ –ó–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥</h3>
          <div className={styles.periodStats}>
            <div className={styles.periodStat}>
              <span className={styles.periodLabel}>–ó–∞ –Ω–µ–¥–µ–ª—é:</span>
              <span className={styles.periodValue}>{tasksCompletedThisWeek} –∑–∞–¥–∞—á</span>
            </div>
            <div className={styles.periodStat}>
              <span className={styles.periodLabel}>–ó–∞ –º–µ—Å—è—Ü:</span>
              <span className={styles.periodValue}>{tasksCompletedThisMonth} –∑–∞–¥–∞—á</span>
            </div>
            <div className={styles.periodStat}>
              <span className={styles.periodLabel}>–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è:</span>
              <span className={styles.periodValue}>{avgCompletionDays} –¥–Ω–µ–π</span>
            </div>
          </div>
        </div>

        <div className={styles.statSection}>
          <h3 className={styles.sectionTitle}>üìÅ –î–æ—Å–∫–∏</h3>
          <div className={styles.boardStats}>
            <div className={styles.boardStat}>
              <span className={styles.boardLabel}>–í—Å–µ–≥–æ –¥–æ—Å–æ–∫:</span>
              <span className={styles.boardValue}>{totalBoards}</span>
            </div>
            <div className={styles.boardStat}>
              <span className={styles.boardLabel}>–ê–∫—Ç–∏–≤–Ω—ã—Ö:</span>
              <span className={styles.boardValue}>{activeBoards}</span>
            </div>
            <div className={styles.boardStat}>
              <span className={styles.boardLabel}>–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º:</span>
              <span className={styles.boardValue}>{favoriteBoards}</span>
            </div>
          </div>
        </div>

        <div className={styles.statSection}>
          <h3 className={styles.sectionTitle}>üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å</h3>
          <div className={styles.statusStats}>
            <div className={styles.statusBar}>
              <div className={styles.statusLabel}>–í —Ä–∞–±–æ—Ç–µ</div>
              <div className={styles.statusBarContainer}>
                <div 
                  className={styles.statusBarFill} 
                  style={{ 
                    width: `${totalTasks > 0 ? (inProgressTasks / totalTasks) * 100 : 0}%`,
                    backgroundColor: '#3B82F6'
                  }}
                />
              </div>
              <span className={styles.statusCount}>{inProgressTasks}</span>
            </div>
            <div className={styles.statusBar}>
              <div className={styles.statusLabel}>–û–∂–∏–¥–∞—é—Ç</div>
              <div className={styles.statusBarContainer}>
                <div 
                  className={styles.statusBarFill} 
                  style={{ 
                    width: `${totalTasks > 0 ? (pendingTasks / totalTasks) * 100 : 0}%`,
                    backgroundColor: '#F59E0B'
                  }}
                />
              </div>
              <span className={styles.statusCount}>{pendingTasks}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DashboardStats;
